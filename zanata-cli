#!/bin/bash
set -e # exit on error

version=3.1.0
rev=ivy-1
name=zanata-cli-${version}-${rev}

: ${ZANATA_CLI_VERSION:="$version"}
: ${IVY_JAR:="/usr/share/java/ivy.jar"}

usage() {
  cat <<EOF
Usage: zanataj [OPTION]... <arguments>

 -I        : This help
 -Irefresh : Refresh Zanata artifacts
 -Idebug   : Enable java debugger
EOF
}

# Parse Low-level options
unset opt_refresh opt_debug

for arg in "$@"
do
  if [ "$arg" == "-Irefresh" ]
  then
    opt_refresh="true"
    shift 1
  elif [ "$arg" == "-Idebug" ]
  then
    opt_debug="true"
    shift 1
  elif [ "$arg" == "-I" ]
  then
    usage
    exit 0
  else
    break
  fi
done

if [ ! -r $IVY_JAR ]; then
  echo "Please install Apache Ivy to $IVY_JAR."
  echo "With Fedora or EPEL 6, run this as root: yum install apache-ivy"
  exit 1
fi


# Documentation for Ivy's command-line options are here:
# http://ant.apache.org/ivy/history/latest-milestone/standalone.html
# http://ant.apache.org/ivy/history/2.1.0/standalone.html
# java -jar /usr/share/java/ivy.jar -?

WORKDIR=$(mktemp --directory)

function cleanup() {
    if [[ -d "$WORKDIR" ]]
    then
        rm -r "$WORKDIR"
    fi
}
trap cleanup EXIT

IVYSETTINGS_XML="$WORKDIR/ivysettings.xml"

# ivysettings.xml as a here document
cat > $IVYSETTINGS_XML <<EOF
<ivysettings>
    <settings defaultResolver="default"/>
    <resolvers>
        <chain name="default">
            <!-- 1. Find artifacts in Maven Central -->
            <ibiblio name="central" m2compatible="true"/>
            <!-- 2. Find Zanata artifacts which are unreleased (or
                released but not yet in Central) -->
            <ibiblio name="oss-public" m2compatible="true"
                root="https://oss.sonatype.org/content/groups/public/"/>
        </chain>
    </resolvers>
</ivysettings>
EOF

# override ivy resolvers
IVY_SETTINGS="-settings $IVYSETTINGS_XML"

IVY_XML="$WORKDIR/ivy.xml"

# ivy.xml as a here document
cat > $IVY_XML <<EOF
<ivy-module version="2.0">
    <info organisation="org.zanata" module="zanataj" />

    <dependencies defaultconf="default">
        <dependency org="org.zanata" name="zanata-cli" rev="$ZANATA_CLI_VERSION">
            <!-- Omit unneeded dependency which conflicts with another one -->
            <exclude org="org.scannotation" />
            <!-- In some environments, Ivy tries to use the version "working@my.host.name" ! -->
            <exclude org="org.jboss.resteasy" module="resteasy-jaxb-provider" />
            <exclude org="org.jboss.resteasy" module="resteasy-multipart-provider" />
        </dependency>
        <dependency org="org.jboss.resteasy" name="resteasy-jaxb-provider" rev="2.3.3.Final" />
        <dependency org="org.jboss.resteasy" name="resteasy-multipart-provider" rev="2.3.3.Final" />
    </dependencies>
</ivy-module>
EOF

IVY_CONFIG="-ivy $IVY_XML"

IVY_LOG=$WORKDIR/ivy.log

# Other java options
JAVA_OPTS=""
# Enable Debugging
if [ "$opt_debug" == "true" ]; then
  JAVA_OPTS="$JAVA_OPTS -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y"
fi

# Clear Zanata artifacts if requested
if [ "$opt_refresh" == "true" ]; then
  echo "Clearing cached Zanata artifacts..."
  rm -rf ~/.ivy2/cache/org.zanata
fi

# Resolve dependencies with ivy's normal logging
# but only output to console in case of failure.

# -refresh tells ivy to 'refresh dynamic resolved revisions' (eg SNAPSHOT deps)

echo "$name: resolving dependencies..."
java \
  -jar $IVY_JAR \
  -refresh \
  -cachepath $WORKDIR/classpath \
  $IVY_CONFIG $IVY_SETTINGS > $IVY_LOG ||
  (echo "ERROR: dependency resolution failed.  Ivy log follows:"; cat $IVY_LOG; rm -f $IVY_LOG; exit 1)
rm -f $IVY_LOG

# Invoke ZanataClient

java $JAVA_OPTS \
  -Dapp.name="$0" \
  -cp $(cat $WORKDIR/classpath) \
  org.zanata.client.ZanataClient "$@"

trap - EXIT
cleanup
exit 0
