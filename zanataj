#!/bin/sh -e

: ${ZANATA_CLI_VERSION:="2.0.2-SNAPSHOT"}

IVY_JAR=/usr/share/java/ivy.jar
if [ ! -r $IVY_JAR ]; then
  echo "Please install Apache Ivy to $IVY_JAR."
  echo "With Fedora or EPEL 6, run this as root: yum install apache-ivy"
  exit 1
fi


# Documentation for Ivy's command-line options are here:
# http://ant.apache.org/ivy/history/latest-milestone/standalone.html
# http://ant.apache.org/ivy/history/2.1.0/standalone.html
# java -jar /usr/share/java/ivy.jar -?

WORKDIR=$(mktemp --directory)

IVYSETTINGS_XML="$WORKDIR/ivysettings.xml"

# ivysettings.xml as a here document
cat > $IVYSETTINGS_XML <<EOF
<ivysettings>
    <settings defaultResolver="default"/>
    <property name="repoPath" value="\${user.home}/.m2/repository" />
    <property name="local-maven2-pattern"
      value="\${repoPath}/[organisation]/[module]/[revision]/[module]-[revision]"
      override="false" />
    <resolvers>
        <chain name="default">
            <!-- 1. Find artifacts in the user's local Maven repo -->
            <filesystem name="local-maven2" m2compatible="true" local="true" >
                <ivy pattern="\${local-maven2-pattern}.pom" />
                <artifact pattern="\${local-maven2-pattern}(-[classifier]).[ext]" />
            </filesystem>
            <!-- 2. Find artifacts in Maven Central -->
            <ibiblio name="central" m2compatible="true"/>
            <!-- 3. Find Zanata artifacts which are unreleased (or
                released but not yet in Central) -->
            <ibiblio name="oss-public" m2compatible="true"
                root="https://oss.sonatype.org/content/groups/public/"/>
        </chain>
    </resolvers>
</ivysettings>
EOF

# override ivy resolvers
IVY_SETTINGS="-settings $IVYSETTINGS_XML"

IVY_XML="$WORKDIR/ivy.xml"

# ivy.xml as a here document
cat > $IVY_XML <<EOF
<ivy-module version="2.0">
    <info organisation="org.zanata" module="zanataj" />
    <dependencies>
        <dependency org="org.zanata" name="zanata-cli" rev="$ZANATA_CLI_VERSION">
            <!-- Omit unneeded dependency which conflicts with another one -->
            <exclude org="org.scannotation" />
        </dependency>
    </dependencies>
</ivy-module>
EOF

IVY_CONFIG="-ivy $IVY_XML"

IVY_LOG=$WORKDIR/ivy.log

# Other java options
JAVA_OPTS=""
# Enable Debugging
# JAVA_OPTS="$JAVA_OPTS -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y"

# Resolve dependencies with ivy's normal logging
# but only output to console in case of failure.

# -refresh tells ivy to 'refresh dynamic resolved revisions' (eg SNAPSHOT deps)

echo "Resolving dependencies..."
java \
  -jar $IVY_JAR \
  -refresh \
  -cachepath $WORKDIR/classpath \
  $IVY_CONFIG $IVY_SETTINGS > $IVY_LOG ||
  (echo "ERROR: dependency resolution failed.  Ivy log follows:"; cat $IVY_LOG; rm -f $IVY_LOG; exit 1)
rm -f $IVY_LOG

# Invoke ZanataClient

java $JAVA_OPTS \
  -cp $(cat $WORKDIR/classpath) \
  org.zanata.client.ZanataClient "$@"

# clean up ivy.xml ivysettings.xml ivy.log
#rm -fr $WORKDIR
