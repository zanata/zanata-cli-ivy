#!/bin/sh -e

: ${ZANATA_CLI_VERSION:="2.0.2-SNAPSHOT"}

# From http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
ZANATAJ_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

IVY_JAR=/usr/share/java/ivy.jar
if [ ! -r $IVY_JAR ]; then
  echo "Please install Apache Ivy to $IVY_JAR."
  echo "With Fedora or EPEL 6, run this as root: yum install apache-ivy"
  exit 1
fi


# Documentation for Ivy's command-line options are here:
# http://ant.apache.org/ivy/history/latest-milestone/standalone.html
# http://ant.apache.org/ivy/history/2.1.0/standalone.html

unset IVY_LOG_LEVEL IVY_REFRESH IVY_SETTINGS

# -error will omit ivy warnings
IVY_LOG_LEVEL=-error

# -refresh tells ivy to 'refresh dynamic resolved revisions' (eg SNAPSHOT deps)
IVY_REFRESH=-refresh

# ivysettings.xml as a here document
cat > $ZANATAJ_HOME/zanataj-ivysettings.xml <<EOF
<ivysettings>
    <settings defaultResolver="default"/>
    <property name="repoPath" value="\${user.home}/.m2/repository" />
    <property name="local-maven2-pattern"
      value="\${repoPath}/[organisation]/[module]/[revision]/[module]-[revision]"
      override="false" />
    <resolvers>
        <chain name="default">
            <!-- 1. Find artifacts in the user's local Maven repo -->
            <filesystem name="local-maven2" m2compatible="true" local="true" >
                <ivy pattern="\${local-maven2-pattern}.pom" />
                <artifact pattern="\${local-maven2-pattern}(-[classifier]).[ext]" />
            </filesystem>
            <!-- 2. Find artifacts in Maven Central -->
            <ibiblio name="central" m2compatible="true"/>
            <!-- 3. Find Zanata artifacts which are unreleased (or
                released but not yet in Central) -->
            <ibiblio name="oss-public" m2compatible="true"
                root="https://oss.sonatype.org/content/groups/public/"/>
        </chain>
    </resolvers>
</ivysettings>
EOF

# override ivy resolvers
IVY_SETTINGS="-settings $ZANATAJ_HOME/zanataj-ivysettings.xml"

IVY_LOG=$(mktemp)

# Other java options
JAVA_OPTS=""
# Enable Debugging
# JAVA_OPTS="$JAVA_OPTS -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y"

# Resolve dependencies with ivy's normal logging
# but only output to console in case of failure.

java \
  -jar $IVY_JAR \
  -dependency org.zanata zanata-cli $ZANATA_CLI_VERSION \
  $IVY_REFRESH $IVY_SETTINGS > $IVY_LOG ||
  (cat $IVY_LOG; rm -f $IVY_LOG; exit 1)
rm -f $IVY_LOG

LOGGING_OPTS="
  -Dorg.slf4j.simpleLogger.showDateTime=false
  -Dorg.slf4j.simpleLogger.showThreadName=false
  -Dorg.slf4j.simpleLogger.showLogName=false
  -Dorg.slf4j.simpleLogger.showShortLogName=false
  -Dorg.slf4j.simpleLogger.levelInBrackets=true
"

# Invoke ZanataClient (and Ivy again) with minimal ivy logging (no ivy refresh)

java \
  $JAVA_OPTS \
  $LOGGING_OPTS \
  -jar $IVY_JAR \
  -dependency org.zanata zanata-cli $ZANATA_CLI_VERSION \
  $IVY_LOG_LEVEL $IVY_SETTINGS \
  -main org.zanata.client.ZanataClient -args -- \
  "$@"
